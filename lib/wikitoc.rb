## Helper for 'sidebar' rake task
class GithubWikiTOC
  def self.write_side_bar
    name_a = get_file_names(all_markdown_files)
    res_h = build_resource_tree(name_a)

    File.open('_Sidebar.md', 'w') do |file|
      file.puts sidebar_warning
      print_resources(res_h) { |line| file.puts line }
    end
  end

  def self.build_resource_tree(name_a)
    res_h = Hash.new { |h, k| h[k] = Hash.new(&h.default_proc) }
    name_a.each do |path|
      sub = res_h
      path.split('-').each { |part| sub = sub[part] }
    end
    res_h
  end

  def self.print_resources(resources_h, link_head = [])
    resources_h.each do |main, sub|
      title = main.split(/_/).map { |word| first_letter_cap(word) }.join(' ')
      bulletize = '  ' * link_head.size + '- '
      if sub.size > 0
        yield bulletize + "#{title}"
        print_resources(sub, link_head + [main]) { |line| yield line }
      else
        yield bulletize + "[[ #{title} | #{(link_head + [main]).join(' ')} ]]"
      end
    end
  end

  def self.all_markdown_files
    Dir['*.md'].select { |f| f =~ /^[^_]/ }
  end

  def self.get_file_names(files)
    files.map { |f| f.gsub('.md', '') }
  end

  def self.sidebar_warning
    <<EOS
<!--
  WARNING: Do not edit this file
  This file is statically generated and will be overwritten frequently
  Use `rake sidebar` to autogenerate based on directory contents
-->
EOS
  end

  def self.first_letter_cap(word)
    cap_word = word
    cap_word[0] = cap_word[0].upcase
    cap_word
  end
end
